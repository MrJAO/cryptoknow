{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{supabase}from\"../../supabaseClient\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Harvests(){const[harvests,setHarvests]=useState([]);useEffect(()=>{fetchHarvests();},[]);const fetchHarvests=async()=>{const{data,error}=await supabase.from(\"harvests\").select(\"*\");if(error){console.error(\"Error fetching harvests:\",error);}else{setHarvests(data);}};return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\",padding:\"20px\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Harvests\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",overflowX:\"auto\",padding:\"20px\",maxWidth:\"1200px\",margin:\"auto\"},children:/*#__PURE__*/_jsxs(\"table\",{style:{width:\"100%\",borderCollapse:\"collapse\",minWidth:\"600px\"},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{style:{background:\"#333\",color:\"#fff\",textAlign:\"left\"},children:[/*#__PURE__*/_jsx(\"th\",{style:{padding:\"12px\",width:\"30%\"},children:\"Project Name\"}),/*#__PURE__*/_jsx(\"th\",{style:{padding:\"12px\",width:\"20%\"},children:\"Ended Date\"}),/*#__PURE__*/_jsx(\"th\",{style:{padding:\"12px\",width:\"15%\"},children:\"Eligible Knowers\"}),/*#__PURE__*/_jsx(\"th\",{style:{padding:\"12px\",width:\"15%\"},children:\"Not Eligible\"}),/*#__PURE__*/_jsx(\"th\",{style:{padding:\"12px\",width:\"20%\"},children:\"Total Knowers Participants\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:harvests.map(harvest=>/*#__PURE__*/_jsxs(\"tr\",{style:{borderBottom:\"1px solid #ddd\"},children:[/*#__PURE__*/_jsx(\"td\",{style:{padding:\"12px\",fontWeight:\"bold\"},children:harvest.project_name}),/*#__PURE__*/_jsx(\"td\",{style:{padding:\"12px\"},children:harvest.ended_date}),/*#__PURE__*/_jsx(\"td\",{style:{padding:\"12px\"},children:harvest.eligible_knowers}),/*#__PURE__*/_jsx(\"td\",{style:{padding:\"12px\"},children:harvest.not_eligible}),/*#__PURE__*/_jsx(\"td\",{style:{padding:\"12px\"},children:harvest.total_knowers_participants})]},harvest.id))})]})})]});}export default Harvests;","map":{"version":3,"names":["React","useState","useEffect","supabase","jsx","_jsx","jsxs","_jsxs","Harvests","harvests","setHarvests","fetchHarvests","data","error","from","select","console","style","textAlign","padding","children","width","overflowX","maxWidth","margin","borderCollapse","minWidth","background","color","map","harvest","borderBottom","fontWeight","project_name","ended_date","eligible_knowers","not_eligible","total_knowers_participants","id"],"sources":["C:/Users/opril/cryptoknow/src/components/Harvests/Harvests.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { supabase } from \"../../supabaseClient\";\r\n\r\nfunction Harvests() {\r\n  const [harvests, setHarvests] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchHarvests();\r\n  }, []);\r\n\r\n  const fetchHarvests = async () => {\r\n    const { data, error } = await supabase.from(\"harvests\").select(\"*\");\r\n    if (error) {\r\n      console.error(\"Error fetching harvests:\", error);\r\n    } else {\r\n      setHarvests(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h1>Harvests</h1>\r\n\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          overflowX: \"auto\",\r\n          padding: \"20px\",\r\n          maxWidth: \"1200px\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <table\r\n          style={{\r\n            width: \"100%\",\r\n            borderCollapse: \"collapse\",\r\n            minWidth: \"600px\",\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr style={{ background: \"#333\", color: \"#fff\", textAlign: \"left\" }}>\r\n              <th style={{ padding: \"12px\", width: \"30%\" }}>Project Name</th>\r\n              <th style={{ padding: \"12px\", width: \"20%\" }}>Ended Date</th>\r\n              <th style={{ padding: \"12px\", width: \"15%\" }}>Eligible Knowers</th>\r\n              <th style={{ padding: \"12px\", width: \"15%\" }}>Not Eligible</th>\r\n              <th style={{ padding: \"12px\", width: \"20%\" }}>Total Knowers Participants</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {harvests.map((harvest) => (\r\n              <tr key={harvest.id} style={{ borderBottom: \"1px solid #ddd\" }}>\r\n                <td style={{ padding: \"12px\", fontWeight: \"bold\" }}>{harvest.project_name}</td>\r\n                <td style={{ padding: \"12px\" }}>{harvest.ended_date}</td>\r\n                <td style={{ padding: \"12px\" }}>{harvest.eligible_knowers}</td>\r\n                <td style={{ padding: \"12px\" }}>{harvest.not_eligible}</td>\r\n                <td style={{ padding: \"12px\" }}>{harvest.total_knowers_participants}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Harvests;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}