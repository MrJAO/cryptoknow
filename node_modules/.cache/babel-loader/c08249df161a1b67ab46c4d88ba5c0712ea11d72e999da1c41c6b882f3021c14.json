{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\opril\\\\cryptoknow\\\\src\\\\components\\\\Harvests\\\\Harvests.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { supabase } from \"../../supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Harvests() {\n  _s();\n  const [harvests, setHarvests] = useState([]);\n  useEffect(() => {\n    fetchHarvests();\n  }, []);\n  const fetchHarvests = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"harvests\").select(\"*\");\n    if (error) {\n      console.error(\"Error fetching harvests:\", error);\n    } else {\n      setHarvests(data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Harvests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        overflowX: \"auto\",\n        padding: \"20px\",\n        maxWidth: \"1200px\",\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: \"100%\",\n          borderCollapse: \"collapse\",\n          minWidth: \"600px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              background: \"#333\",\n              color: \"#fff\",\n              textAlign: \"left\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: \"12px\",\n                width: \"30%\"\n              },\n              children: \"Project Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: \"12px\",\n                width: \"20%\"\n              },\n              children: \"Ended Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: \"12px\",\n                width: \"15%\"\n              },\n              children: \"Eligible Knowers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: \"12px\",\n                width: \"15%\"\n              },\n              children: \"Not Eligible\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: \"12px\",\n                width: \"20%\"\n              },\n              children: \"Total Knowers Participants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: harvests.map(harvest => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              borderBottom: \"1px solid #ddd\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"12px\",\n                fontWeight: \"bold\"\n              },\n              children: harvest.project_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"12px\"\n              },\n              children: harvest.ended_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"12px\"\n              },\n              children: harvest.eligible_knowers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"12px\"\n              },\n              children: harvest.not_eligible\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"12px\"\n              },\n              children: harvest.total_knowers_participants\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, harvest.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Harvests, \"3svrApgSTyAdumYVA1lU/seapT8=\");\n_c = Harvests;\nexport default Harvests;\nvar _c;\n$RefreshReg$(_c, \"Harvests\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","Harvests","_s","harvests","setHarvests","fetchHarvests","data","error","from","select","console","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","width","overflowX","maxWidth","margin","borderCollapse","minWidth","background","color","map","harvest","borderBottom","fontWeight","project_name","ended_date","eligible_knowers","not_eligible","total_knowers_participants","id","_c","$RefreshReg$"],"sources":["C:/Users/opril/cryptoknow/src/components/Harvests/Harvests.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { supabase } from \"../../supabaseClient\";\r\n\r\nfunction Harvests() {\r\n  const [harvests, setHarvests] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchHarvests();\r\n  }, []);\r\n\r\n  const fetchHarvests = async () => {\r\n    const { data, error } = await supabase.from(\"harvests\").select(\"*\");\r\n    if (error) {\r\n      console.error(\"Error fetching harvests:\", error);\r\n    } else {\r\n      setHarvests(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h1>Harvests</h1>\r\n\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          overflowX: \"auto\",\r\n          padding: \"20px\",\r\n          maxWidth: \"1200px\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <table\r\n          style={{\r\n            width: \"100%\",\r\n            borderCollapse: \"collapse\",\r\n            minWidth: \"600px\",\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr style={{ background: \"#333\", color: \"#fff\", textAlign: \"left\" }}>\r\n              <th style={{ padding: \"12px\", width: \"30%\" }}>Project Name</th>\r\n              <th style={{ padding: \"12px\", width: \"20%\" }}>Ended Date</th>\r\n              <th style={{ padding: \"12px\", width: \"15%\" }}>Eligible Knowers</th>\r\n              <th style={{ padding: \"12px\", width: \"15%\" }}>Not Eligible</th>\r\n              <th style={{ padding: \"12px\", width: \"20%\" }}>Total Knowers Participants</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {harvests.map((harvest) => (\r\n              <tr key={harvest.id} style={{ borderBottom: \"1px solid #ddd\" }}>\r\n                <td style={{ padding: \"12px\", fontWeight: \"bold\" }}>{harvest.project_name}</td>\r\n                <td style={{ padding: \"12px\" }}>{harvest.ended_date}</td>\r\n                <td style={{ padding: \"12px\" }}>{harvest.eligible_knowers}</td>\r\n                <td style={{ padding: \"12px\" }}>{harvest.not_eligible}</td>\r\n                <td style={{ padding: \"12px\" }}>{harvest.total_knowers_participants}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Harvests;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}