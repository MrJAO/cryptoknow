{"ast":null,"code":"import{supabase}from\"../supabaseClient\";// Adjust path if needed\nexport const subscribeToAirdrops=setAirdrops=>{// Fetch initial data (exclude \"id\" explicitly)\nconst fetchAirdrops=async()=>{const{data,error}=await supabase.from(\"available_airdrops\").select(\"project_name, task_link, chain, airdrop_type, device_needed, status\");// ✅ Excludes \"id\"\nif(error){console.error(\"Error fetching airdrops:\",error);}else{setAirdrops(data);}};fetchAirdrops();// Subscribe to real-time updates\nconst channel=supabase.channel(\"available_airdrops\").on(\"postgres_changes\",{event:\"*\",schema:\"public\",table:\"available_airdrops\"},payload=>{console.log(\"Airdrop update received:\",payload);setAirdrops(prev=>{if(payload.eventType===\"INSERT\"){return[...prev,payload.new];// Add new item\n}else if(payload.eventType===\"UPDATE\"){return prev.map(item=>item.project_name===payload.new.project_name?payload.new:item);// Update item\n}else if(payload.eventType===\"DELETE\"){return prev.filter(item=>item.project_name!==payload.old.project_name);}return prev;});}).subscribe();return()=>{supabase.removeChannel(channel);// Cleanup on unmount\n};};","map":{"version":3,"names":["supabase","subscribeToAirdrops","setAirdrops","fetchAirdrops","data","error","from","select","console","channel","on","event","schema","table","payload","log","prev","eventType","new","map","item","project_name","filter","old","subscribe","removeChannel"],"sources":["C:/Users/opril/cryptoknow/src/utils/supabaseSubscription.js"],"sourcesContent":["import { supabase } from \"../supabaseClient\"; // Adjust path if needed\r\n\r\nexport const subscribeToAirdrops = (setAirdrops) => {\r\n  // Fetch initial data (exclude \"id\" explicitly)\r\n  const fetchAirdrops = async () => {\r\n    const { data, error } = await supabase\r\n      .from(\"available_airdrops\")\r\n      .select(\"project_name, task_link, chain, airdrop_type, device_needed, status\"); // ✅ Excludes \"id\"\r\n\r\n    if (error) {\r\n      console.error(\"Error fetching airdrops:\", error);\r\n    } else {\r\n      setAirdrops(data);\r\n    }\r\n  };\r\n\r\n  fetchAirdrops();\r\n\r\n  // Subscribe to real-time updates\r\n  const channel = supabase\r\n  .channel(\"available_airdrops\")\r\n  .on(\r\n    \"postgres_changes\",\r\n    { event: \"*\", schema: \"public\", table: \"available_airdrops\" },\r\n    (payload) => {\r\n      console.log(\"Airdrop update received:\", payload);\r\n      setAirdrops((prev) => {\r\n        if (payload.eventType === \"INSERT\") {\r\n          return [...prev, payload.new]; // Add new item\r\n        } else if (payload.eventType === \"UPDATE\") {\r\n          return prev.map((item) =>\r\n            item.project_name === payload.new.project_name ? payload.new : item\r\n          ); // Update item\r\n        } else if (payload.eventType === \"DELETE\") {\r\n          return prev.filter((item) => item.project_name !== payload.old.project_name);\r\n        }\r\n        return prev;\r\n      });\r\n    }\r\n  )\r\n  .subscribe();\r\n\r\n\r\n  return () => {\r\n    supabase.removeChannel(channel); // Cleanup on unmount\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,mBAAmB,CAAE;AAE9C,MAAO,MAAM,CAAAC,mBAAmB,CAAIC,WAAW,EAAK,CAClD;AACA,KAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAL,QAAQ,CACnCM,IAAI,CAAC,oBAAoB,CAAC,CAC1BC,MAAM,CAAC,qEAAqE,CAAC,CAAE;AAElF,GAAIF,KAAK,CAAE,CACTG,OAAO,CAACH,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAClD,CAAC,IAAM,CACLH,WAAW,CAACE,IAAI,CAAC,CACnB,CACF,CAAC,CAEDD,aAAa,CAAC,CAAC,CAEf;AACA,KAAM,CAAAM,OAAO,CAAGT,QAAQ,CACvBS,OAAO,CAAC,oBAAoB,CAAC,CAC7BC,EAAE,CACD,kBAAkB,CAClB,CAAEC,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,QAAQ,CAAEC,KAAK,CAAE,oBAAqB,CAAC,CAC5DC,OAAO,EAAK,CACXN,OAAO,CAACO,GAAG,CAAC,0BAA0B,CAAED,OAAO,CAAC,CAChDZ,WAAW,CAAEc,IAAI,EAAK,CACpB,GAAIF,OAAO,CAACG,SAAS,GAAK,QAAQ,CAAE,CAClC,MAAO,CAAC,GAAGD,IAAI,CAAEF,OAAO,CAACI,GAAG,CAAC,CAAE;AACjC,CAAC,IAAM,IAAIJ,OAAO,CAACG,SAAS,GAAK,QAAQ,CAAE,CACzC,MAAO,CAAAD,IAAI,CAACG,GAAG,CAAEC,IAAI,EACnBA,IAAI,CAACC,YAAY,GAAKP,OAAO,CAACI,GAAG,CAACG,YAAY,CAAGP,OAAO,CAACI,GAAG,CAAGE,IACjE,CAAC,CAAE;AACL,CAAC,IAAM,IAAIN,OAAO,CAACG,SAAS,GAAK,QAAQ,CAAE,CACzC,MAAO,CAAAD,IAAI,CAACM,MAAM,CAAEF,IAAI,EAAKA,IAAI,CAACC,YAAY,GAAKP,OAAO,CAACS,GAAG,CAACF,YAAY,CAAC,CAC9E,CACA,MAAO,CAAAL,IAAI,CACb,CAAC,CAAC,CACJ,CACF,CAAC,CACAQ,SAAS,CAAC,CAAC,CAGZ,MAAO,IAAM,CACXxB,QAAQ,CAACyB,aAAa,CAAChB,OAAO,CAAC,CAAE;AACnC,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}