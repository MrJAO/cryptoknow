{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\opril\\\\cryptoknow\\\\src\\\\components\\\\Quests\\\\QuestBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { supabase } from \"../../supabaseClient\";\nimport \"./QuestBox.css\"; // Import external CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestBox = ({\n  title,\n  fields,\n  tableName\n}) => {\n  _s();\n  const [formData, setFormData] = useState(() => fields.reduce((acc, field) => ({\n    ...acc,\n    [field.name]: \"\"\n  }), {}));\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const {\n        data,\n        error\n      } = await supabase.auth.getUser();\n      if (error) {\n        console.error(\"Error fetching user:\", error);\n        setMessage(\"⚠️ Failed to fetch user. Please log in again.\");\n      } else if (data !== null && data !== void 0 && data.user) {\n        var _data$user$user_metad, _data$user$user_metad2;\n        const discordUsername = ((_data$user$user_metad = data.user.user_metadata) === null || _data$user$user_metad === void 0 ? void 0 : _data$user$user_metad.user_name) || ((_data$user$user_metad2 = data.user.user_metadata) === null || _data$user$user_metad2 === void 0 ? void 0 : _data$user$user_metad2.full_name) || \"\";\n        setFormData(prevData => ({\n          ...prevData,\n          discord_username: discordUsername\n        }));\n\n        // Fetch user's linked Twitter username if the quest requires it\n        if (fields.some(field => field.name === \"twitter_post\")) {\n          const {\n            data: twitterData,\n            error: twitterError\n          } = await supabase.from(\"user_twitter_usernames\").select(\"twitter_username\").eq(\"discord_username\", discordUsername).maybeSingle();\n          if (twitterError) {\n            console.error(\"Error fetching Twitter username:\", twitterError);\n          } else if (twitterData) {\n            setFormData(prevData => ({\n              ...prevData,\n              twitter_post: twitterData.twitter_username\n            }));\n          }\n        }\n      }\n    };\n    fetchUserData();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quest-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quest-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"quests-form\",\n      children: fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: field.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: field.name,\n          value: formData[field.name] || \"\",\n          onChange: handleChange,\n          placeholder: field.placeholder,\n          disabled: field.disabled,\n          required: field.required,\n          className: \"quest-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, field.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestBox, \"1TCFbx4vN2gppKFa693iMp6PoF4=\");\n_c = QuestBox;\nexport default QuestBox;\nvar _c;\n$RefreshReg$(_c, \"QuestBox\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","QuestBox","title","fields","tableName","_s","formData","setFormData","reduce","acc","field","name","message","setMessage","loading","setLoading","fetchUserData","data","error","auth","getUser","console","user","_data$user$user_metad","_data$user$user_metad2","discordUsername","user_metadata","user_name","full_name","prevData","discord_username","some","twitterData","twitterError","from","select","eq","maybeSingle","twitter_post","twitter_username","handleChange","e","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSubmit","map","label","type","onChange","placeholder","disabled","required","_c","$RefreshReg$"],"sources":["C:/Users/opril/cryptoknow/src/components/Quests/QuestBox.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { supabase } from \"../../supabaseClient\";\r\nimport \"./QuestBox.css\"; // Import external CSS file\r\n\r\nconst QuestBox = ({ title, fields, tableName }) => {\r\n  const [formData, setFormData] = useState(() =>\r\n    fields.reduce((acc, field) => ({ ...acc, [field.name]: \"\" }), {})\r\n  );\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      const { data, error } = await supabase.auth.getUser();\r\n\r\n      if (error) {\r\n        console.error(\"Error fetching user:\", error);\r\n        setMessage(\"⚠️ Failed to fetch user. Please log in again.\");\r\n      } else if (data?.user) {\r\n        const discordUsername =\r\n          data.user.user_metadata?.user_name ||\r\n          data.user.user_metadata?.full_name ||\r\n          \"\";\r\n\r\n        setFormData((prevData) => ({\r\n          ...prevData,\r\n          discord_username: discordUsername,\r\n        }));\r\n\r\n        // Fetch user's linked Twitter username if the quest requires it\r\n        if (fields.some(field => field.name === \"twitter_post\")) {\r\n          const { data: twitterData, error: twitterError } = await supabase\r\n            .from(\"user_twitter_usernames\")\r\n            .select(\"twitter_username\")\r\n            .eq(\"discord_username\", discordUsername)\r\n            .maybeSingle();\r\n\r\n          if (twitterError) {\r\n            console.error(\"Error fetching Twitter username:\", twitterError);\r\n          } else if (twitterData) {\r\n            setFormData((prevData) => ({\r\n              ...prevData,\r\n              twitter_post: twitterData.twitter_username,\r\n            }));\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"quest-box\">\r\n      <h2 className=\"quest-title\">{title}</h2>\r\n      <form onSubmit={handleSubmit} className=\"quests-form\">\r\n        {fields.map((field) => (\r\n          <div key={field.name} className=\"form-group\">\r\n            <label>{field.label}</label>\r\n            <input\r\n              type=\"text\"\r\n              name={field.name}\r\n              value={formData[field.name] || \"\"}\r\n              onChange={handleChange}\r\n              placeholder={field.placeholder}\r\n              disabled={field.disabled}\r\n              required={field.required}\r\n              className=\"quest-input\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}